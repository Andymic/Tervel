\begin{thebibliography}{7}
\providecommand{\natexlab}[1]{#1}
\providecommand{\url}[1]{\texttt{#1}}
\expandafter\ifx\csname urlstyle\endcsname\relax
  \providecommand{\doi}[1]{doi: #1}\else
  \providecommand{\doi}{doi: \begingroup \urlstyle{rm}\Url}\fi

\bibitem[Feldman(2014)]{feldman_vector}
Feldman.
\newblock How to be a big noob.
\newblock \emph{International Journal of Trolls and Nooblets}, pages 1--2,
  2014.

\bibitem[Feldman et~al.(2014)Feldman, LaBorde, and Dechev]{feldman_mcas}
S.~Feldman, P.~LaBorde, and D.~Dechev.
\newblock A wait-free multi-word compare-and-swap operation.
\newblock \emph{International Journal of Parallel Programming}, pages 1--25,
  2014.

\bibitem[Harris et~al.(2002)Harris, Fraser, and Pratt]{harris_mcas}
T.~L. Harris, K.~Fraser, and I.~A. Pratt.
\newblock A practical multi-word compare-and-swap operation.
\newblock In \emph{Distributed Computing}, pages 265--279. Springer, 2002.

\bibitem[Herlihy and Shavit(2012)]{herlihy_bible}
M.~Herlihy and N.~Shavit.
\newblock \emph{The Art of Multiprocessor Programming, Revised Reprint}.
\newblock Elsevier, 2012.

\bibitem[Kogan and Petrank(2012)]{kogan_fpsp}
A.~Kogan and E.~Petrank.
\newblock A methodology for creating fast wait-free data structures.
\newblock In \emph{ACM SIGPLAN Notices}, volume~47, pages 141--150. ACM, 2012.

\bibitem[Krizhanovsky(2013)]{krizhanovsky_queue}
A.~Krizhanovsky.
\newblock Lock-free multi-producer multi-consumer queue on ring buffer.
\newblock \emph{Linux Journal}, 2013\penalty0 (228):\penalty0 4, 2013.

\bibitem[Tsigas and Zhang(2001)]{tsigas_queue}
P.~Tsigas and Y.~Zhang.
\newblock A simple, fast and scalable non-blocking concurrent fifo queue for
  shared memory multiprocessor systems.
\newblock In \emph{Proceedings of the thirteenth annual ACM symposium on
  Parallel algorithms and architectures}, pages 134--143. ACM, 2001.

\end{thebibliography}
